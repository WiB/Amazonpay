<!-- Place this code in your HTML where you would like the address widget to appear. -->
<div id="addressBookWidgetDiv"> </div>

<!-- Place this code in your HTML where you would like the wallet widget to appear. -->
<div id="walletWidgetDiv"> </div>

<style>
    #addressBookWidgetDiv {
        min-width: 300px;
        width: 100%;
        max-width: 900px;
        min-height: 228px;
        height: 240px;
        max-height: 400px;
    }

    #walletWidgetDiv {
        min-width: 300px;
        width: 100%;
        max-width: 900px;
        min-height: 228px;
        height: 240px;
        max-height: 400px;
    }
</style>

<script>
    window.onAmazonLoginReady = function() {amazon.Login.setClientId('{{ amazonConfig.client_id }}'); };
    window.onAmazonPaymentsReady = function() {
        new OffAmazonPayments.Widgets.AddressBook({
            sellerId: '{{ amazonConfig.seller_id }}',
            scope: 'profile',
            language: 'en-EN',
            onOrderReferenceCreate: function(orderReference) {
                // Here is where you can grab the Order Reference ID.
                var aoid = orderReference.getAmazonOrderReferenceId();

                document.getElementsByClassName('{{ amazonConfig.amazon_order_reference_element }}')[0].value = aoid;
            },
            onAddressSelect: function(orderReference) {
                // Replace the following code with the action that you want
                // to perform after the address is selected. The
                // amazonOrderReferenceId can be used to retrieve the address
                // details by calling the GetOrderReferenceDetails operation.

                // If rendering the AddressBook and Wallet widgets
                // on the same page, you do not have to provide any additional
                // logic to load the Wallet widget after the AddressBook widget.
                // The Wallet widget will re-render itself on all subsequent
                // onAddressSelect events, without any action from you.
                // It is not recommended that you explicitly refresh it.
            },
            design: {
                designMode: 'responsive'
            },
            onReady: function(orderReference) {
                // Enter code here you want to be executed
                // when the address widget has been rendered.
            },
            onError: function(error) {
                // Your error handling code.
                // During development you can use the following
                // code to view error messages:
                // console.log(error.getErrorCode() + ': ' + error.getErrorMessage());
                // See "Handling Errors" for more information.
            }
        }).bind("addressBookWidgetDiv");

        new OffAmazonPayments.Widgets.Wallet({
            sellerId: '{{ amazonConfig.seller_id }}',
            scope: 'profile postal_code payments:widget payments:shipping_address',
            onPaymentSelect: function(orderReference) {
                // Replace this code with the action that you want to perform
                // after the payment method is selected.

                // Ideally this would enable the next action for the buyer
                // including either a "Continue" or "Place Order" button.
            },
            design: {
                designMode: 'responsive'
            },
            onError: function(error) {
                // Your error handling code.
                // During development you can use the following
                // code to view error messages:
                // console.log(error.getErrorCode() + ': ' + error.getErrorMessage());
                // See "Handling Errors" for more information.
            }
        }).bind("walletWidgetDiv");
    };
</script>

<script async="async"
        src='https://static-eu.payments-amazon.com/OffAmazonPayments/eur/sandbox/lpa/js/Widgets.js'>
</script>